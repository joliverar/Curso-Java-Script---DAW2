// ejemplo12.js
// UD1 - Ejercicio 12: Juego "Adivina el n√∫mero"
// Reglas:
// - El programa elige un n√∫mero secreto aleatorio entre 1 y 100 (ambos inclusive).
// - El usuario dispone de 5 intentos para adivinarlo.
// - Tras cada intento, se indica si el n√∫mero introducido es "demasiado peque√±o" o "demasiado grande".
// - Si acierta, gana; si consume los 5 intentos, pierde y se muestra el n√∫mero secreto.

'use strict'; // Activa el modo estricto para detectar errores comunes (variables no declaradas, etc.).

// Genera un entero aleatorio en el rango [1, 100].
// Math.random() ‚Üí [0,1)  ;  *100 ‚Üí [0,100)  ;  floor ‚Üí {0..99}  ;  +1 ‚Üí {1..100}
const secreto = Math.floor(Math.random() * 100) + 1;

// Contador de intentos restantes (el enunciado pide 5).
let intentos = 5;

// Bucle principal del juego: itera mientras queden intentos.
while (intentos > 0) {
  // Pedimos un n√∫mero al usuario. Mostramos los intentos que quedan como ayuda visual.
  // prompt devuelve: string con lo tecleado o null si el usuario pulsa "Cancelar".
  const entrada = prompt(`Adivina el n√∫mero (1..100).\nIntentos restantes: ${intentos}`);

  // Si el usuario cancela (null), salimos del juego informando el n√∫mero secreto.
  if (entrada === null) {
    alert(`Juego cancelado. El n√∫mero secreto era ${secreto}.`);
    // Opcionalmente, podemos "romper" todo el bucle con break.
    break;
  }

  // Convertimos la entrada (string) a entero base 10.
  const intento = Number.parseInt(entrada, 10);

  // Validaci√≥n: si NO es un entero v√°lido entre 1 y 100, avisamos y REINTENTAMOS
  // sin gastar intento (continue salta al siguiente ciclo del while).
  if (!Number.isInteger(intento) || intento < 1 || intento > 100) {
    alert('Entrada inv√°lida. Debes introducir un ENTERO entre 1 y 100.');
    continue;
  }

  // Caso de acierto: terminamos el juego con un mensaje de √©xito.
  if (intento === secreto) {
    alert('¬°Correcto! üéâ Has adivinado el n√∫mero.');
    break;
  }

  // Si no acert√≥, damos una pista comparando con el secreto
  // y reducimos el contador de intentos.
  alert(intento < secreto ? 'Demasiado peque√±o.' : 'Demasiado grande.');
  intentos--; // Hemos consumido un intento v√°lido (entrada correcta pero no coincidi√≥).
}

// Si se agotaron los intentos (llegamos a 0) y no hubo acierto/cancelaci√≥n previa,
// mostramos que ha perdido y revelamos el secreto.
if (intentos === 0) {
  alert(`Has perdido. El n√∫mero secreto era ${secreto}.`);
}

// (Opcional) Mensaje final para el flujo por cancelaci√≥n o acierto
// (si quieres indicar que el juego termin√≥ y volver al men√∫ de tu index.html).
// alert('Fin del juego. Puedes volver al men√∫.');

